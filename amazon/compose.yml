version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    networks:
      - local
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

  migrate:
    container_name: migrate
    image: migrate/migrate
    networks:
      - local
    volumes:
      - ./migrations:/migrations
    entrypoint: migrate
    command: "-path /migrations -database postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable -verbose up"
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.12-rc-alpine
    container_name: rabbitmq
    restart: on-failure
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: ifconfig | grep broadcast
    env_file: .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - local


networks:
  local:
    name: local
    driver: bridge
